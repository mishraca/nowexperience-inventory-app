<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_475543_my_inve_0_inventory_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Item count/Return date validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    if (current.count.changes()) {
        if (current.count > current.requested_item.in_stock) {
            gs.addErrorMessage(gs.getMessage("Stock available is less than the count"));
            current.setAbortAction(true);
        }
    }
    if (current.return_date.changes()) {
        var maxLoanDuration = current.requested_item.loan_duration;
		var reqDate = new GlideDateTime(current.request_date);
        var loanDueDate = new GlideDateTime(current.request_date);
        loanDueDate.addDaysUTC(maxLoanDuration.toString());
        var returnDate = new GlideDateTime(current.return_date);
        if (loanDueDate.getNumericValue() < returnDate.getNumericValue()) {
            gs.addErrorMessage(gs.getMessage("Return date should be less than or equal to max loan duration."));
            current.setAbortAction(true);
        }
		else if (reqDate.getNumericValue() > returnDate.getNumericValue()) {
            gs.addErrorMessage(gs.getMessage("Return date should be after required date."));
            current.setAbortAction(true);
        }
		
    }


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>chandumishra21@gmail.com</sys_created_by>
        <sys_created_on>2021-10-10 13:14:49</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>99edd72e4d87741085ca0d19b3f200ae</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Item count/Return date validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="My Inventory Tracker" source="x_475543_my_inve_0">29ed1b2e608774106ef70d843b0b7f2c</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Inventory Tracker">29ed1b2e608774106ef70d843b0b7f2c</sys_scope>
        <sys_update_name>sys_script_99edd72e4d87741085ca0d19b3f200ae</sys_update_name>
        <sys_updated_by>chandumishra21@gmail.com</sys_updated_by>
        <sys_updated_on>2021-10-10 13:14:49</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=99edd72e4d87741085ca0d19b3f200ae"/>
</record_update>
